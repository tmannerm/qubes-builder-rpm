# common config from mock distribution (mostly to set correct useradd parameters)
include('/etc/mock/opensuse-leap-{}-x86_64.cfg'.format(os.environ['DIST_VER']))

# global options
config_opts['cache_topdir'] = os.environ['CACHEDIR']
config_opts['basedir'] = os.environ['CHROOT_DIR'] + '/mock'
config_opts['use_bootstrap_container'] = False

config_opts['root'] = 'opensuse-leap-{}-x86_64'.format(os.environ['DIST_VER'])
config_opts['target_arch'] = 'x86_64'
config_opts['legal_host_arches'] = ('x86_64',)
config_opts['chroot_setup_cmd'] = 'install patterns-devel-C-C++-devel_C_C++ patterns-devel-base-devel_rpm_build lsb-release python2'
config_opts['dist'] = os.environ.get('DIST') # only useful for --resultdir variable subst
config_opts['extra_chroot_dirs'] = [ '/run/lock', ]
config_opts['releasever'] = os.environ['DIST_VER']
config_opts['package_manager'] = 'dnf'
config_opts['nosync'] = True
config_opts['nosync_force'] = True
config_opts['cleanup_on_failure'] = False
config_opts['macros']['source_date_epoch_from_changelog'] = 'Y'
config_opts['macros']['clamp_mtime_to_source_date_epoch'] = 'Y'
config_opts['macros']['use_source_date_epoch_as_buildtime'] = 'Y'
config_opts['macros']['_buildhost'] = 'reproducible'
# Macro set_build_flags is only in RPM v4.15 or in redhat-rpm-macros package (Fedora-based only)
config_opts['macros']['set_build_flags'] = ' \
    export CFLAGS="${CFLAGS:-%optflags}" \
    export CXXFLAGS="${CXXFLAGS:-%optflags}" \
    export FFLAGS="${FFLAGS:-%optflags}"'
# Python build macros that are only in Fedora-based distributions
config_opts['macros']['python3_pkgversion'] = '3'
config_opts['macros']['py3dir'] = '%{_builddir}/python3-%{name}-%{version}-%{release}'
# Enable building debuginfo/debugsource packages
config_opts['macros']['_build_create_debug'] = '1'
config_opts['macros']['%prep'] = '%{?!__debug_package:%{?_build_create_debug:%?debug_package}}%%prep'
config_opts['macros']['%package'] = '%{?!__debug_package:%{?_build_create_debug:%?debug_package}}%%package'

config_opts['yum.conf'] = """
[main]
keepcache=1
debuglevel=2
reposdir=/dev/null
logfile=/var/log/yum.log
retries=20
obsoletes=1
gpgcheck=0
assumeyes=1
syslog_ident=mock
syslog_device=
install_weak_deps=1
metadata_expire=0
mdpolicy=group:primary
best=1

# repos

[repo-oss]
name=Main Repository
#baseurl=http://download.opensuse.org/distribution/leap/$releasever/repo/oss/
metalink=http://download.opensuse.org/distribution/leap/$releasever/repo/oss/repodata/repomd.xml.metalink
gpgkey=file://{keys_dir}/RPM-GPG-KEY-openSUSE
gpgcheck=1
skip_if_unavailable=0
metadata_expire=7d

[repo-updates]
name=Main Update Repository
#baseurl=http://download.opensuse.org/update/leap/$releasever/oss/
metalink=http://download.opensuse.org/update/leap/$releasever/oss/repodata/repomd.xml.metalink
gpgkey=file://{keys_dir}/RPM-GPG-KEY-openSUSE
gpgcheck=1
skip_if_unavailable=0
metadata_expire=6h

[builder-local]
name=builder-local
baseurl=file://{builder_repo_dir}
gpgcheck=0
exclude=qubes-release
skip_if_unavailable=0

[qubes-current]
name=qubes-{package_set}-current
baseurl=https://yum.qubes-os.org/r{qubes_version}/current/{package_set}/opensuse/leap/$releasever
gpgkey=file://{keys_dir}/RPM-GPG-KEY-qubes-{qubes_version}-opensuse
gpgcheck=1
exclude=qubes-release
enabled=0
skip_if_unavailable=True

[qubes-current-testing]
name=qubes-{package_set}-testing
baseurl=https://yum.qubes-os.org/r{qubes_version}/current-testing/{package_set}/opensuse/leap/$releasever
gpgkey=file://{keys_dir}/RPM-GPG-KEY-qubes-{qubes_version}-opensuse
gpgcheck=1
exclude=qubes-release
enabled=0
skip_if_unavailable=True

# OBS repositories that contains some required packages missing from standard repos, enabled as needed

[obs-gcc]
name=Rebuild
type=rpm-md
baseurl=https://download.opensuse.org/repositories/home:/wicked/openSUSE_Leap_$releasever/
gpgkey=https://download.opensuse.org/repositories/home:/wicked/openSUSE_Leap_$releasever/repodata/repomd.xml.key
gpgcheck=1
enabled=0
skip_if_unavailable=True
metadata_expire=6h
""".format(
    package_set=os.environ['PACKAGE_SET'],
    qubes_version=os.environ['USE_QUBES_REPO_VERSION'],
    keys_dir=(os.environ['RPM_PLUGIN_DIR'] + '/keys'),
    builder_repo_dir=os.environ['BUILDER_REPO_DIR'],
)
